plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "net.minecraftforge.gradle.forge"
    id "org.spongepowered.mixin"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = "https://maven.minecraftforge.net/" }
    maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
    maven { url = "https://jitpack.io/" }
    maven {
        url = "https://repo.essential.gg/repository/maven-public"
    }
}

archivesBaseName = "Helium"
version = "0.2"
group = "net.helium.Helium"

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = "UTF-8"


minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
    clientJvmArgs += ["-Dfml.coreMods.load=net.helium.injector.TransformerLoader", "-Ddev-mode"]
}

configurations {
    include
    implementation.extendsFrom(include)
}

dependencies {
    include "gg.essential:vigilance-1.8.9-forge:258"
    include 'org.realityforge.org.jetbrains.annotations:org.jetbrains.annotations:1.7.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib:1.3.21"
    include("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        transitive = false
        exclude module: "guava"
        exclude module: "commons-io"
        exclude module: "gson"
        exclude module: "launchwrapper"
        exclude module: "log4j-core"
        exclude module: "slf4j-api"
    }
    annotationProcessor("org.spongepowered:mixin:0.7.11-SNAPSHOT")
}

shadowJar {
    archiveClassifier.set("")
    configurations = [project.configurations.include]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE

    exclude "LICENSE.txt"

    exclude "META-INF/maven/**"
    exclude "META-INF/versions/**"

    exclude "org/apache/**"
    exclude "org/junit/**"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    filesMatching("mcmod.info") {
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    rename "(.+_at.cfg)", "META-INF/\$1"
}

task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
                todir: "${buildDir}/classes/java"
    }
}

moveResources.dependsOn(processResources)
classes.dependsOn(moveResources)

jar {
    manifest.attributes(
            "FMLCorePlugin": "net.helium.injector.TransformerLoader",
            "FMLCorePluginContainsFMLMod": true,
            "ForceLoadAsMod": true,
            "MixinConfigs": "helium.mixins.json",
            "ModSide": "CLIENT",
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": "0",
    )

    enabled = false
}

mixin {
    disableRefMapWarning = true
    defaultObfuscationEnv searge
    add sourceSets.main, "helium.mixins.refmap.json"
}

reobf {
    shadowJar {
        mappingType = "SEARGE"
    }
}

configurations {
    external
    compile.extendsFrom(external)
}

tasks.reobfShadowJar.mustRunAfter shadowJar

tasks.reobfJar.dependsOn(shadowJar)